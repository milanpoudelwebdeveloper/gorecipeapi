basePath: /
definitions:
  controllers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controllers.RegisterRequest:
    properties:
      country:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - country
    - email
    - name
    - password
    type: object
  models.Categories:
    properties:
      coverimage:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.Recipe:
    properties:
      country:
        type: string
      description:
        type: string
      id:
        type: integer
      instructions:
        type: string
      title:
        type: string
    type: object
  models.User:
    properties:
      country:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      profile_image:
        type: string
      role:
        type: string
      verified:
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    name: Milan Poudel
    url: https://github.com/milanpoudelwebdeveloper
  description: This is a sample server for a recipe API.
  title: Recipe API
  version: "1.0"
paths:
  /categories:
    get:
      consumes:
      - application/json
      description: get all categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Categories'
      summary: get all categories
      tags:
      - categories
  /login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            type: string
      summary: Login
      tags:
      - auth
  /recipes:
    get:
      consumes:
      - application/json
      description: get all recipes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Recipe'
      summary: get all recipes
      tags:
      - recipes
    post:
      consumes:
      - application/json
      description: Post a recipe
      parameters:
      - description: Recipe object that needs to be added
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/models.Recipe'
      produces:
      - application/json
      responses:
        "201":
          description: Recipe added successfully
          schema:
            type: string
      summary: Post a recipe
      tags:
      - recipes
  /register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: Register Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            type: string
      summary: Register
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Post a user
      parameters:
      - description: User object that needs to be added
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: User added successfully
          schema:
            type: string
      summary: Post a user
      tags:
      - users
swagger: "2.0"
